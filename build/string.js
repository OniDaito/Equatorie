// Generated by CoffeeScript 1.6.3
(function() {
  var EquatorieString,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EquatorieString = (function(_super) {
    __extends(EquatorieString, _super);

    function EquatorieString(length, thickness, segments) {
      var i, seglength, segment_geom, segment_node, _i, _ref;
      EquatorieString.__super__.constructor.call(this);
      seglength = length / segments;
      segment_geom = new CoffeeGL.Shapes.Cylinder(thickness, 12, seglength);
      for (i = _i = 0, _ref = segments - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        segment_node = new CoffeeGL.Node(segment_geom);
        this.add(segment_node);
      }
    }

    EquatorieString.prototype.update = function(data) {
      var idx, phys, segment, tmatrix, tq, tv, _i, _len, _ref, _results;
      idx = 0;
      _ref = this.children;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        segment = _ref[_i];
        phys = data.segments[idx];
        segment.matrix.identity();
        tq = new CoffeeGL.Quaternion();
        tv = new CoffeeGL.Vec3(phys.rax, phys.ray, phys.raz);
        tq.fromAxisAngle(tv, phys.ra);
        tmatrix = tq.getMatrix4();
        tmatrix.setPos(new CoffeeGL.Vec3(phys.x, phys.y, phys.z));
        segment.matrix.copyFrom(tmatrix);
        _results.push(idx++);
      }
      return _results;
    };

    return EquatorieString;

  })(CoffeeGL.Node);

  module.exports = {
    EquatorieString: EquatorieString
  };

}).call(this);
