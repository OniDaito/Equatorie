// Generated by CoffeeScript 1.6.3
(function() {
  var EquatorieSystem;

  EquatorieSystem = (function() {
    function EquatorieSystem() {
      this.base_size = 6.0;
      this.planet_data = {};
      this.planet_data.venus = {
        deferent_speed: 0.985,
        epicycle_speed: 0.616,
        epicycle_ratio: 0.72294,
        deferent_eccentricity: 0.0145,
        apogee_longitude: 98.1666667,
        mean_longitude: 279.7,
        mean_anomaly: 63.383
      };
      this.planet_data.mars = {
        deferent_speed: 0.524,
        epicycle_speed: 0.461,
        epicycle_ratio: 0.6563,
        deferent_eccentricity: 0.10284,
        apogee_longitude: 148.6166667,
        mean_longitude: 293.55,
        mean_anomaly: 346.15
      };
      this.planet_data.jupiter = {
        deferent_speed: 0.083,
        epicycle_speed: 0.902,
        epicycle_ratio: 0.1922,
        deferent_eccentricity: 0.04817,
        apogee_longitude: 188.9666667,
        mean_longitude: 238.16666667,
        mean_anomaly: 41.5333333
      };
      this.planet_data.saturn = {
        deferent_speed: 0.033,
        epicycle_speed: 0.952,
        epicycle_ratio: 0.10483,
        deferent_eccentricity: 0.05318,
        apogee_longitude: 148.6166667,
        mean_longitude: 266.25,
        mean_anomaly: 13.45
      };
      this.mean_motus = 0;
      this.mean_argument = 0;
    }

    EquatorieSystem.prototype.calculateDeferentPosition = function(planet) {
      var x, y;
      x = this.base_size * this.planet_data[planet].deferent_eccentricity * Math.cos(CoffeeGL.degToRad(this.planet_data[planet].apogee_longitude));
      y = this.base_size * this.planet_data[planet].deferent_eccentricity * Math.sin(CoffeeGL.degToRad(this.planet_data[planet].apogee_longitude));
      return [x, y];
    };

    EquatorieSystem.prototype.calculateEpicyclePosition = function(planet) {
      var rx, ry, x, y, _ref;
      _ref = this.calculateDeferentPosition(planet), x = _ref[0], y = _ref[1];
      rx = this.base_size * Math.sin(CoffeeGL.degToRad(this.mean_motus));
      ry = this.base_size * Math.cos(CoffeeGL.degToRad(this.mean_motus));
      return [x + rx, y + ry];
    };

    return EquatorieSystem;

  })();

  module.exports = {
    EquatorieSystem: EquatorieSystem
  };

}).call(this);
