// Generated by CoffeeScript 1.6.3
/*
                       __  .__              ________ 
   ______ ____   _____/  |_|__| ____   ____/   __   \
  /  ___// __ \_/ ___\   __\  |/  _ \ /    \____    /
  \___ \\  ___/\  \___|  | |  (  <_> )   |  \ /    / 
 /____  >\___  >\___  >__| |__|\____/|___|  //____/  .co.uk
      \/     \/     \/                    \/         
                                              CoffeeGL
                                              Benjamin Blundell - ben@section9.co.uk
                                              http://www.section9.co.uk

This software is released under Creative Commons Attribution Non-Commercial Share Alike
http://creativecommons.org/licenses/by-nc-sa/3.0/
*/


(function() {
  var Equatorie, cgl, eq,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Equatorie = (function() {
    function Equatorie() {
      this.draw = __bind(this.draw, this);
      this.update = __bind(this.update, this);
      this.init = __bind(this.init, this);
    }

    Equatorie.prototype.init = function() {
      var r0,
        _this = this;
      this.top_node = new CoffeeGL.Node();
      r0 = new CoffeeGL.Request('../shaders/basic.glsl');
      r0.get(function(data) {
        var r1;
        _this.shader_basic = new CoffeeGL.Shader(data, {
          "uColour": "uColour"
        });
        r1 = new CoffeeGL.Request('../shaders/basic_lighting.glsl');
        return r1.get(function(data) {
          var r2, _ref;
          _this.shader = new CoffeeGL.Shader(data);
          _this.shader.bind();
          if ((_ref = _this.shader) != null) {
            _ref.setUniform3v("uAmbientLightingColor", new CoffeeGL.Colour.RGB(0.15, 0.15, 0.15));
          }
          _this.shader.unbind();
          r2 = new CoffeeGL.Request('../models/equatorie.js');
          return r2.get(function(data) {
            _this.g = new CoffeeGL.JSONModel(data);
            _this.g.matrix.translate(new CoffeeGL.Vec3(0, 0, 0));
            _this.top_node.add(_this.g);
            _this.g.children[0].shader = _this.shader_basic;
            _this.g.children[1].shader = _this.shader;
            return _this.g.children[0].uColour = new CoffeeGL.Colour.RGBA(1.0, 1.0, 0.0, 1.0);
          });
        });
      });
      this.c = new CoffeeGL.Camera.MousePerspCamera(new CoffeeGL.Vec3(0, 0, 25));
      this.top_node.add(this.c);
      this.light = new CoffeeGL.Light.PointLight(new CoffeeGL.Vec3(0.0, 5.0, 25.0), new CoffeeGL.Colour.RGB(1.0, 1.0, 1.0));
      this.light2 = new CoffeeGL.Light.PointLight(new CoffeeGL.Vec3(0.0, 15.0, 5.0), new CoffeeGL.Colour.RGB(1.0, 1.0, 1.0));
      this.top_node.add(this.light);
      this.top_node.add(this.light2);
      GL.enable(GL.CULL_FACE);
      GL.cullFace(GL.BACK);
      return GL.enable(GL.DEPTH_TEST);
    };

    Equatorie.prototype.update = function(dt) {
      var m;
      this.angle = dt * 0.001 * CoffeeGL.degToRad(20.0);
      if (this.angle >= CoffeeGL.PI * 2) {
        this.angle = 0;
      }
      m = new CoffeeGL.Quaternion();
      m.fromAxisAngle(new CoffeeGL.Vec3(0, 1, 0), this.angle);
      return m.transVec3(this.light.pos);
    };

    Equatorie.prototype.draw = function() {
      GL.clearColor(0.15, 0.15, 0.15, 1.0);
      GL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);
      this.c.update();
      if (this.top_node != null) {
        return this.top_node.draw();
      }
    };

    return Equatorie;

  })();

  eq = new Equatorie();

  cgl = new CoffeeGL.App('webgl-canvas', eq, eq.init, eq.draw, eq.update);

}).call(this);
